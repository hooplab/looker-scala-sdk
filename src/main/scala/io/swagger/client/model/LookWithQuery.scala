/**
 * Looker API 3.0 Reference
 * ### Authorization  The Looker API uses Looker **API3** credentials for authorization and access control. Looker admins can create API3 credentials on Looker's **Admin/Users** page. Pass API3 credentials to the **_/login** endpoint to obtain a temporary access_token. Include that access_token in the Authorization header of Looker API requests. For details, see [Looker API Authorization](https://looker.com/docs/r/api/authorization)  ### Client SDKs  The Looker API is a RESTful system that should be usable by any programming language capable of making HTTPS requests. Client SDKs for a variety of programming languages can be generated from the Looker API's Swagger JSON metadata to streamline use of the Looker API in your applications. A client SDK for Ruby is available as an example. For more information, see [Looker API Client SDKs](https://looker.com/docs/r/api/client_sdks)  ### Try It Out!  The 'api-docs' page served by the Looker instance includes 'Try It Out!' buttons for each API method. After logging in with API3 credentials, you can use the \"Try It Out!\" buttons to call the API directly from the documentation page to interactively explore API features and responses.  ### Versioning  Future releases of Looker will expand this API release-by-release to securely expose more and more of the core power of Looker to API client applications. API endpoints marked as \"beta\" may receive breaking changes without warning. Stable (non-beta) API endpoints should not receive breaking changes in future releases. For more information, see [Looker API Versioning](https://looker.com/docs/r/api/versioning) 
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model

import java.util.Date

case class LookWithQuery (
  // Unique Id
  id: Option[String] = None,
  // Id of content metadata
  contentMetadataId: Option[Long] = None,
  // Number of times viewed in the Looker web UI
  viewCount: Option[Long] = None,
  // Number of times favorited
  favoriteCount: Option[Long] = None,
  // Content Favorite Id
  contentFavoriteId: Option[Long] = None,
  // Look Title
  title: Option[String] = None,
  // User
  user: Option[UserIdOnly] = None,
  // Query Id
  queryId: Option[Long] = None,
  // Description
  description: Option[String] = None,
  // Short Url
  shortUrl: Option[String] = None,
  // Space of this Look
  space: Option[SpaceBase] = None,
  // Is Public
  public: Option[Boolean] = None,
  // Public Slug
  publicSlug: Option[String] = None,
  // (Write-Only) User Id
  userId: Option[Long] = None,
  // (Write-Only) Space Id
  spaceId: Option[String] = None,
  // Model
  model: Option[LookModel] = None,
  // Public Url
  publicUrl: Option[String] = None,
  // Embed Url
  embedUrl: Option[String] = None,
  // Google Spreadsheet Formula
  googleSpreadsheetFormula: Option[String] = None,
  // Excel File Url
  excelFileUrl: Option[String] = None,
  // Url
  url: Option[String] = None,
  // Query
  query: Option[Query] = None,
  // Time that the Look was created.
  createdAt: Option[Date] = None,
  // Time that the Look was updated.
  updatedAt: Option[Date] = None,
  // Time that the Look was deleted.
  deletedAt: Option[Date] = None,
  // Id of User that last updated the look.
  lastUpdaterId: Option[Long] = None,
  // Time last viewed in the Looker web UI
  lastViewedAt: Option[Date] = None,
  // Time that the Look was last accessed by any user
  lastAccessedAt: Option[Date] = None,
  // Id of User that deleted the look.
  deleterId: Option[Long] = None,
  // Whether or not the look is deleted
  deleted: Option[Boolean] = None,
  // auto-run query when Look viewed
  isRunOnLoad: Option[Boolean] = None,
  // Operations the current user is able to perform on this object
  can: Option[Map[String, Boolean]] = None
)

