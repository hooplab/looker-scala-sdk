/**
 * Looker API 3.0 Reference
 * ### Authorization  The Looker API uses Looker **API3** credentials for authorization and access control. Looker admins can create API3 credentials on Looker's **Admin/Users** page. Pass API3 credentials to the **_/login** endpoint to obtain a temporary access_token. Include that access_token in the Authorization header of Looker API requests. For details, see [Looker API Authorization](https://looker.com/docs/r/api/authorization)  ### Client SDKs  The Looker API is a RESTful system that should be usable by any programming language capable of making HTTPS requests. Client SDKs for a variety of programming languages can be generated from the Looker API's Swagger JSON metadata to streamline use of the Looker API in your applications. A client SDK for Ruby is available as an example. For more information, see [Looker API Client SDKs](https://looker.com/docs/r/api/client_sdks)  ### Try It Out!  The 'api-docs' page served by the Looker instance includes 'Try It Out!' buttons for each API method. After logging in with API3 credentials, you can use the \"Try It Out!\" buttons to call the API directly from the documentation page to interactively explore API features and responses.  ### Versioning  Future releases of Looker will expand this API release-by-release to securely expose more and more of the core power of Looker to API client applications. API endpoints marked as \"beta\" may receive breaking changes without warning. Stable (non-beta) API endpoints should not receive breaking changes in future releases. For more information, see [Looker API Versioning](https://looker.com/docs/r/api/versioning) 
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model


case class LookmlModelExplore (
  // Fully qualified name model plus explore name
  id: Option[String] = None,
  // Explore name
  name: Option[String] = None,
  // Description
  description: Option[String] = None,
  // Label
  label: Option[String] = None,
  // Scopes
  scopes: Option[List[String]] = None,
  // Can Total
  canTotal: Option[Boolean] = None,
  // Can Save
  canSave: Option[Boolean] = None,
  // Can Explain
  canExplain: Option[Boolean] = None,
  // Can pivot in the DB
  canPivotInDb: Option[Boolean] = None,
  // Has timezone support
  hasTimezoneSupport: Option[Boolean] = None,
  // Cost estimates supported
  supportsCostEstimate: Option[Boolean] = None,
  // Connection name
  connectionName: Option[String] = None,
  // How nulls are sorted, possible values are \"low\", \"high\", \"first\" and \"last\"
  nullSortTreatment: Option[String] = None,
  // List of model source files
  files: Option[List[String]] = None,
  // Primary source_file file
  sourceFile: Option[String] = None,
  // Name of project
  projectName: Option[String] = None,
  // Name of model
  modelName: Option[String] = None,
  // Name of view
  viewName: Option[String] = None,
  // Is hidden
  hidden: Option[Boolean] = None,
  // A sql_table_name expression that defines what sql table the view/explore maps onto. Example: \"prod_orders2 AS orders\" in a view named orders.
  sqlTableName: Option[String] = None,
  // (DEPRECATED) Array of access filter field names
  accessFilterFields: Option[List[String]] = None,
  // Access filters
  accessFilters: Option[List[LookmlModelExploreAccessFilter]] = None,
  // Aliases
  aliases: Option[List[LookmlModelExploreAlias]] = None,
  // Always filter
  alwaysFilter: Option[List[LookmlModelExploreAlwaysFilter]] = None,
  // Conditionally filter
  conditionallyFilter: Option[List[LookmlModelExploreConditionallyFilter]] = None,
  // Array of index fields
  indexFields: Option[List[String]] = None,
  // Sets
  sets: Option[List[LookmlModelExploreSet]] = None,
  // Errors
  errors: Option[List[LookmlModelExploreError]] = None,
  // Fields
  fields: Option[LookmlModelExploreFieldset] = None,
  // Views joined into this explore
  joins: Option[List[LookmlModelExploreJoins]] = None,
  // Label used to group explores in the navigation menus
  groupLabel: Option[String] = None,
  // An array of items describing which custom measure types are supported for creating a custom measure 'baed_on' each possible dimension type.
  supportedMeasureTypes: Option[List[LookmlModelExploreSupportedMeasureType]] = None
)

