/**
 * Looker API 3.0 Reference
 * ### Authorization  The Looker API uses Looker **API3** credentials for authorization and access control. Looker admins can create API3 credentials on Looker's **Admin/Users** page. Pass API3 credentials to the **_/login** endpoint to obtain a temporary access_token. Include that access_token in the Authorization header of Looker API requests. For details, see [Looker API Authorization](https://looker.com/docs/r/api/authorization)  ### Client SDKs  The Looker API is a RESTful system that should be usable by any programming language capable of making HTTPS requests. Client SDKs for a variety of programming languages can be generated from the Looker API's Swagger JSON metadata to streamline use of the Looker API in your applications. A client SDK for Ruby is available as an example. For more information, see [Looker API Client SDKs](https://looker.com/docs/r/api/client_sdks)  ### Try It Out!  The 'api-docs' page served by the Looker instance includes 'Try It Out!' buttons for each API method. After logging in with API3 credentials, you can use the \"Try It Out!\" buttons to call the API directly from the documentation page to interactively explore API features and responses.  ### Versioning  Future releases of Looker will expand this API release-by-release to securely expose more and more of the core power of Looker to API client applications. API endpoints marked as \"beta\" may receive breaking changes without warning. Stable (non-beta) API endpoints should not receive breaking changes in future releases. For more information, see [Looker API Versioning](https://looker.com/docs/r/api/versioning) 
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model


case class Query (
  // Unique Id
  id: Option[Long] = None,
  // Model
  model: String,
  // View
  view: String,
  // Fields
  fields: Option[List[String]] = None,
  // Pivots
  pivots: Option[List[String]] = None,
  // Fill Fields
  fillFields: Option[List[String]] = None,
  // Filters
  filters: Option[Map[String, String]] = None,
  // Filter Expression
  filterExpression: Option[String] = None,
  // Sorting for the query results. Use the format [\"view.field\", ...] to sort on fields in ascending order. Use the format [\"view.field desc\", ...] to sort on fields in descending order. Use [\"__UNSORTED__\"] to disable sorting entirely. Empty sorts [] will trigger a default sort.
  sorts: Option[List[String]] = None,
  // Limit
  limit: Option[String] = None,
  // Column Limit
  columnLimit: Option[String] = None,
  // Total
  total: Option[Boolean] = None,
  // Raw Total
  rowTotal: Option[String] = None,
  // Runtime
  runtime: Option[Double] = None,
  // Visualization configuration properties. These properties are typically opaque and differ based on the type of visualization used. There is no specified set of allowed keys. The values can be any type supported by JSON. A \"type\" key with a string value is often present, and is used by Looker to determine which visualization to present. Visualizations ignore unknown vis_config properties.
  visConfig: Option[Map[String, String]] = None,
  // The filter_config represents the state of the filter UI on the explore page for a given query. When running a query via the Looker UI, this parameter takes precedence over \"filters\". When creating a query or modifying an existing query, \"filter_config\" should be set to null. Setting it to any other value could cause unexpected filtering behavior. The format should be considered opaque.
  filterConfig: Option[Map[String, String]] = None,
  // Visible UI Sections
  visibleUiSections: Option[String] = None,
  // Slug
  slug: Option[String] = None,
  // Dynamic Fields
  dynamicFields: Option[List[String]] = None,
  // Client Id: used to generate shortened explore URLs. If set by client, must be a unique 22 character alphanumeric string. Otherwise one will be generated.
  clientId: Option[String] = None,
  // Share Url
  shareUrl: Option[String] = None,
  // Expanded Share Url
  expandedShareUrl: Option[String] = None,
  // Expanded Url
  url: Option[String] = None,
  // Query Timezone
  queryTimezone: Option[String] = None,
  // Has Table Calculations
  hasTableCalculations: Option[Boolean] = None,
  // Operations the current user is able to perform on this object
  can: Option[Map[String, Boolean]] = None
)

